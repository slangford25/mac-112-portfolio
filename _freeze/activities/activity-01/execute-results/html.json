{
  "hash": "e2653c3c553cb9f86a54e027c6d164a4",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Activity 01- Data Viz\"\n---\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load the package\nlibrary(tidyverse)\n\n# Import data\nhikes <- read.csv(\"https://mac-stat.github.io/data/high_peaks.csv\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(hikes)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n             peak elevation difficulty ascent length time    rating\n1     Mt. Marcy        5344          5   3166   14.8 10.0  moderate\n2 Algonquin Peak       5114          5   2936    9.6  9.0  moderate\n3   Mt. Haystack       4960          7   3570   17.8 12.0 difficult\n4   Mt. Skylight       4926          7   4265   17.9 15.0 difficult\n5 Whiteface Mtn.       4867          4   2535   10.4  8.5      easy\n6       Dix Mtn.       4857          5   2800   13.2 10.0  moderate\n```\n\n\n:::\n:::\n\n\nWhat features would we like a visualization of the categorical difficulty rating variable to capture?\n- A bar chart would be good for a categorical variable such as difficulty.\n\nWhat about a visualization of the quantitative elevation variable?\n- A histogram would be good for elevation variable.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Use the ggplot function\nggplot(hikes, aes(x = rating))\n```\n\n::: {.cell-output-display}\n![](activity-01_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Adding geom_bar() indicates what kind of graph to create\nggplot(hikes, aes(x = rating)) +\n  geom_bar()\n```\n\n::: {.cell-output-display}\n![](activity-01_files/figure-html/unnamed-chunk-3-2.png){width=672}\n:::\n\n```{.r .cell-code}\n# Changes the axis labels\nggplot(hikes, aes(x = rating)) +\n  geom_bar() +\n  labs(x = \"Rating\", y = \"Number of hikes\")\n```\n\n::: {.cell-output-display}\n![](activity-01_files/figure-html/unnamed-chunk-3-3.png){width=672}\n:::\n\n```{.r .cell-code}\n# Changes the color of the bar chart\nggplot(hikes, aes(x = rating)) +\n  geom_bar(fill = \"blue\") +\n  labs(x = \"Rating\", y = \"Number of hikes\")\n```\n\n::: {.cell-output-display}\n![](activity-01_files/figure-html/unnamed-chunk-3-4.png){width=672}\n:::\n\n```{.r .cell-code}\n# Adds an orange outline\nggplot(hikes, aes(x = rating)) +\n  geom_bar(color = \"orange\", fill = \"blue\") +\n  labs(x = \"Rating\", y = \"Number of hikes\")\n```\n\n::: {.cell-output-display}\n![](activity-01_files/figure-html/unnamed-chunk-3-5.png){width=672}\n:::\n\n```{.r .cell-code}\n# Changes the theme of the graph, making the background white\nggplot(hikes, aes(x = rating)) +\n  geom_bar(color = \"orange\", fill = \"blue\")  +\n  labs(x = \"Rating\", y = \"Number of hikes\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](activity-01_files/figure-html/unnamed-chunk-3-6.png){width=672}\n:::\n:::\n\n\nPart a\nReflect on the ggplot() code.\n\nWhat’s the purpose of the +? When do we use it?\n- the + indicates that another function is being added to the ggplot function.\n\nWe added the bars using geom_bar()? Why “geom”?\n- It indicates that the graph is geometric\n\nWhat does labs() stand for?\n- labs() stands for labels\n\nWhat’s the difference between color and fill?\n- color changes the color of the border, fill changes the color of the entire bar.\n\nPart b\nIn general, bar charts allow us to examine the following properties of a categorical variable:\nobserved categories: What categories did we observe?\n- difficulty\n\nvariability between categories: Are observations evenly spread out among the categories, or are some categories more common than others?\n- moderate is by far the most common category\n\nWe must then translate this information into the context of our analysis, here hikes in the Adirondacks. Summarize below what you learned from the bar chart, in context.\n\nPart c\nIs there anything you don’t like about this barplot? For example: check out the x-axis again.\n- the x-axis is in alphabetical order not order of difficulty.\n\n\nExercise 6\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(hikes, aes(x = elevation)) +\n  geom_bar()\n```\n\n::: {.cell-output-display}\n![](activity-01_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\nThis is NOT an effective visualization because it creates a new bar for every unique elevation, making the bars small and difficult to read as very few peaks have the exact same elevation.\n\nExercise 8\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(hikes, aes(x = elevation)) +\n  geom_histogram()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](activity-01_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\nExercise 9\n\n::: {.cell}\n\n```{.r .cell-code}\n# Adds a histogram plot\nggplot(hikes, aes(x = elevation)) +\n  geom_histogram()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](activity-01_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Adds white border to bars in plot\nggplot(hikes, aes(x = elevation)) +\n  geom_histogram(color = \"white\") \n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](activity-01_files/figure-html/unnamed-chunk-6-2.png){width=672}\n:::\n\n```{.r .cell-code}\n# Makes the bars blue\nggplot(hikes, aes(x = elevation)) +\n  geom_histogram(color = \"white\", fill = \"blue\") \n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](activity-01_files/figure-html/unnamed-chunk-6-3.png){width=672}\n:::\n\n```{.r .cell-code}\n# Adds axis labels\nggplot(hikes, aes(x = elevation)) +\n  geom_histogram(color = \"white\") +\n  labs(x = \"Elevation (feet)\", y = \"Number of hikes\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](activity-01_files/figure-html/unnamed-chunk-6-4.png){width=672}\n:::\n\n```{.r .cell-code}\n# Changes the range of each bar to 1000\nggplot(hikes, aes(x = elevation)) +\n  geom_histogram(color = \"white\", binwidth = 1000) +\n  labs(x = \"Elevation (feet)\", y = \"Number of hikes\")\n```\n\n::: {.cell-output-display}\n![](activity-01_files/figure-html/unnamed-chunk-6-5.png){width=672}\n:::\n\n```{.r .cell-code}\n# Changes the range of each bar to 2\nggplot(hikes, aes(x = elevation)) +\n  geom_histogram(color = \"white\", binwidth = 5) +\n  labs(x = \"Elevation (feet)\", y = \"Number of hikes\")\n```\n\n::: {.cell-output-display}\n![](activity-01_files/figure-html/unnamed-chunk-6-6.png){width=672}\n:::\n\n```{.r .cell-code}\n# Changes the range of each bar to 200\nggplot(hikes, aes(x = elevation)) +\n  geom_histogram(color = \"white\", binwidth = 200) +\n  labs(x = \"Elevation (feet)\", y = \"Number of hikes\")\n```\n\n::: {.cell-output-display}\n![](activity-01_files/figure-html/unnamed-chunk-6-7.png){width=672}\n:::\n:::\n\n\nExercise 11\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(hikes, aes(x = elevation)) +\n  geom_density(color = \"blue\", fill = \"orange\")\n```\n\n::: {.cell-output-display}\n![](activity-01_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\nggplot template:\n\n::: {.cell}\n\n```{.r .cell-code}\n#ggplot(___, aes(x = ___)) + \n  #geom___(color = \"___\", fill = \"___\") + \n  #labs(x = \"___\", y = \"___\")\n```\n:::\n\n\n\nPRACTICE\n\n::: {.cell}\n\n```{.r .cell-code}\n# Data on students in this class\nsurvey <- read.csv(\"https://ajohns24.github.io/data/112/about_us_2024.csv\")\n\n# World Cup data\nworld_cup <- read.csv(\"https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-11-29/worldcups.csv\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=survey, aes(x = minutes_to_campus)) + \n  geom_histogram(color = \"purple\", fill = \"navy\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](activity-01_files/figure-html/survey plots-1.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(data=world_cup, aes(x=host)) +\n  geom_bar(fill=\"green\")\n```\n\n::: {.cell-output-display}\n![](activity-01_files/figure-html/survey plots-2.png){width=672}\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}